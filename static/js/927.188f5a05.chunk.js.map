{"version":3,"file":"static/js/927.188f5a05.chunk.js","mappings":"mMAKMA,EAAO,UACPC,EAAW,UAEXC,GAAMC,EAAAA,EAAAA,IAAH,iQAEoBH,GAcvBI,GAAaD,EAAAA,EAAAA,IAAH,iFAMVE,GAAaF,EAAAA,EAAAA,IAAH,4MAWVG,GAAiBH,EAAAA,EAAAA,IAAH,iJAITF,GAKLM,GAAYJ,EAAAA,EAAAA,IAAH,wFAMTK,GAAiBL,EAAAA,EAAAA,IAAH,8CAIdM,GAAsBN,EAAAA,EAAAA,IAAH,0CAInBO,GAAcP,EAAAA,EAAAA,IAAH,kHACKH,GAMhBW,GAAWR,EAAAA,EAAAA,IAAH,mJACQF,GAchBW,EAAW,SAACC,GAChB,IAAQC,EAAYD,EAAZC,QACAC,EAAmDD,EAAnDC,GAAIC,EAA+CF,EAA/CE,WAAYC,EAAmCH,EAAnCG,MAAOC,EAA4BJ,EAA5BI,YAAaC,EAAeL,EAAfK,WAC5C,GAAwCC,EAAAA,EAAAA,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,eAIfC,GAAcC,EAAAA,EAAAA,cAAY,WAC1BL,EACFG,EAAeP,GAEfM,EAAYP,KAEb,CAACC,EAAII,EAAYL,EAASO,EAAaC,IAE1C,OAAO,eAAKnB,IAAKD,EAAV,WACL,eAAKC,IAAKC,EAAV,WACE,eAAKD,IAAKI,EAAV,SAAsBU,KACtB,eAAKd,IAAKG,EAAV,WACE,eAAKH,IAAKK,EAAV,SAA2BU,KAC3B,eAAKf,IAAKM,EAAV,SAAgCO,EAAWS,KAf1B,SAACC,GAAD,OAAsB,eAAKvB,IAAKO,EAAV,SAAwBgB,gBAkBnE,yBACGP,IAAc,eAAKQ,UAAU,WAAWxB,IAAKQ,EAA/B,oBACf,kBAAQR,IAAKE,EAAYsB,UAAU,cAAcC,QAASL,EAA1D,SAAwEJ,EAAa,SAAW,gBAQhGU,EAAO,SAAChB,GACZ,IAAQiB,EAASjB,EAATiB,KAER,OAAO,wBACJA,EAAKL,KAAI,SAACX,GAAD,OAAa,QAACF,EAAD,CAAUE,QAASA,UAI9C,KAAeiB,EAAAA,EAAAA,MAAKF,I,uFCzHdG,GAAO7B,EAAAA,EAAAA,IAAH,0CAIJ8B,EAAW,WACf,IAAQC,GAAad,EAAAA,EAAAA,KAAbc,SACR,OAAO,eAAK/B,IAAK6B,EAAV,UACL,QAAC,IAAD,CAAMF,KAAMI,OAIhB,WAAeH,EAAAA,EAAAA,MAAKE","sources":["components/List.tsx","pages/Favorite.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { memo, useCallback } from \"react\"\nimport { usePostContext, Post } from \"../context/post\";\n\nconst gray = \"#e8e8e8\"\nconst grayDark = \"#8f8f8f\"\n\nconst row = css`\n  padding: 16px 0px;\n  border-bottom: 1px solid ${gray};\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  :hover {\n    .button-save {\n      display: block;\n    }\n    .save-tag {\n      display: none;\n    }\n  }\n`\n\nconst rowContent = css`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`\n\nconst saveButton = css`\n  text-align: right;\n  display: none;\n  background-color: white;\n  padding: 6px 8px;\n  font-size: 18px;\n  border-radius: 2px;\n  border: 1px solid black;\n  cursor: pointer;\n`\n\nconst rowDescription = css`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  color: ${grayDark};\n  font-size: 16px;\n  font-weight: 500;\n`\n\nconst titleText = css`\n  font-size: 24px;\n  text-align: left;\n  margin-bottom: 8px;\n`\n\nconst authorNameText = css`\n  margin-right: 8px;\n`\n\nconst categoriesContainer = css`\n  display: flex;\n`\n\nconst categoryTag = css`\n  background-color: ${gray};\n  border-radius: 2px;\n  margin-left: 8px;\n  padding: 4px 6px;\n`\n\nconst savedTag = css`\n  background-color: ${grayDark};\n  color: white;\n  border-radius: 2px;\n  padding: 4px 6px;\n  :hover {\n    display: none;\n  }\n`\n\ninterface ListItemProps {\n  rowData: Post;\n  isFavorite?: boolean;\n}\n\nconst ListItem = (props: ListItemProps) => {\n  const { rowData } = props;\n  const { id, categories, title, author_name, isFavorite } = rowData\n  const { addFavorite, removeFavorite } = usePostContext();\n\n  const renderCategory = (category: string) => <div css={categoryTag}>{category}</div>\n\n  const handleClick = useCallback(() => {\n    if (isFavorite) {\n      removeFavorite(id);\n    } else {\n      addFavorite(rowData);\n    }\n  }, [id, isFavorite, rowData, addFavorite, removeFavorite])\n\n  return <div css={row}>\n    <div css={rowContent}>\n      <div css={titleText}>{title}</div>\n      <div css={rowDescription}>\n        <div css={authorNameText}>{author_name}</div>\n        <div css={categoriesContainer}>{categories.map(renderCategory)}</div>\n      </div>\n    </div>\n    <div>\n      {isFavorite && <div className=\"save-tag\" css={savedTag}>Saved</div>}\n      <button css={saveButton} className=\"button-save\" onClick={handleClick}>{isFavorite ? \"Unsave\" : \"Save\"}</button>\n    </div>\n  </div>\n}\n\ninterface Props {\n  list: Post[];\n}\nconst List = (props: Props) => {\n  const { list } = props;\n\n  return <div>\n    {list.map((rowData) => <ListItem rowData={rowData} />)}\n  </div>\n}\n\nexport default memo(List)\n","/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport { memo } from \"react\"\nimport List from \"../components/List\";\nimport { usePostContext } from \"../context/post\";\n\nconst page = css`\n  padding: 16px;\n`\n\nconst Favorite = () => {\n  const { favorite } = usePostContext();\n  return <div css={page}>\n    <List list={favorite} />\n  </div>\n}\n\nexport default memo(Favorite);"],"names":["gray","grayDark","row","css","rowContent","saveButton","rowDescription","titleText","authorNameText","categoriesContainer","categoryTag","savedTag","ListItem","props","rowData","id","categories","title","author_name","isFavorite","usePostContext","addFavorite","removeFavorite","handleClick","useCallback","map","category","className","onClick","List","list","memo","page","Favorite","favorite"],"sourceRoot":""}